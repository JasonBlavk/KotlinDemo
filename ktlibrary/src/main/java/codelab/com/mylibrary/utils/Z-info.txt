
工具类中会经常用到扩展函数相关的知识，这是Kotlin很强大的地方。


扩展函数数是指在一个类上增加一种新的行为，甚至我们没有这个类代码的访问权限。
在Java中，通常会实现很多带有static方法的工具类。Kotlin中扩展函数的一个优势是我们不需要在调用方法的时候把整个对象当作参数传入。
扩展函数表现得就像是属于这个类的一样，而且我们可以使用this关键字和调用所有public方法。

举个例子，我们可以创建一个toast函数，这个函数不需要传入任何context，它可以被任何Context或者它的子类调用，比如Activity或者Service：

fun Context.toast(message: CharSequence, duration: Int = Toast.LENGTH_SHORT) {
    Toast.makeText(this, message, duration).show()
}

扩展函数也可以是一个属性。所以我们可以通过相似的方法来扩展属性。

public var TextView.text: CharSequence
    get() = getText()
    set(v) = setText(v)

扩展函数并不是真正地修改了原来的类，它是以静态导入的方式来实现的。扩展函数可以被声明在任何文件中，因此有个通用的实践是把一系列有关的函数放在一个新建的文件里。

https://github.com:JasonBlavk/KotlinDemo.git
